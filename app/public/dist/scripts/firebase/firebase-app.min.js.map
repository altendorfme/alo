{"version":3,"file":"firebase-app.min.js","sources":["firebase-app.js"],"sourcesContent":["/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst stringToByteArray$1 = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) === 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\r\nconst byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        const c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            const c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            const c4 = bytes[pos++];\r\n            const u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\r\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\r\n// Static lookup maps, lazily populated by init_()\r\nconst base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeByteArray(input, webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        const byteToCharMap = webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length; i += 3) {\r\n            const byte1 = input[i];\r\n            const haveByte2 = i + 1 < input.length;\r\n            const byte2 = haveByte2 ? input[i + 1] : 0;\r\n            const haveByte3 = i + 2 < input.length;\r\n            const byte3 = haveByte3 ? input[i + 2] : 0;\r\n            const outByte1 = byte1 >> 2;\r\n            const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            let outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray$1(input), webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */\r\n    decodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray(input, webSafe) {\r\n        this.init_();\r\n        const charToByteMap = webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length;) {\r\n            const byte1 = charToByteMap[input.charAt(i++)];\r\n            const haveByte2 = i < input.length;\r\n            const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            const haveByte3 = i < input.length;\r\n            const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            const haveByte4 = i < input.length;\r\n            const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw new DecodeBase64StringError();\r\n            }\r\n            const outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 !== 64) {\r\n                const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 !== 64) {\r\n                    const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_() {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (let i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * An error encountered while decoding base64 string.\r\n */\r\nclass DecodeBase64StringError extends Error {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.name = 'DecodeBase64StringError';\r\n    }\r\n}\r\n/**\r\n * URL-safe base64 encoding\r\n */\r\nconst base64Encode = function (str) {\r\n    const utf8Bytes = stringToByteArray$1(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 encoding (without \".\" padding in the end).\r\n * e.g. Used in JSON Web Token (JWT) parts.\r\n */\r\nconst base64urlEncodeWithoutPadding = function (str) {\r\n    // Use base64url encoding and remove padding in the end (dot characters).\r\n    return base64Encode(str).replace(/\\./g, '');\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\r\nconst base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Polyfill for `globalThis` object.\r\n * @returns the `globalThis` object for the given environment.\r\n * @public\r\n */\r\nfunction getGlobal() {\r\n    if (typeof self !== 'undefined') {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined') {\r\n        return window;\r\n    }\r\n    if (typeof global !== 'undefined') {\r\n        return global;\r\n    }\r\n    throw new Error('Unable to locate global object.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst getDefaultsFromGlobal = () => getGlobal().__FIREBASE_DEFAULTS__;\r\n/**\r\n * Attempt to read defaults from a JSON string provided to\r\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\r\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\r\n * The dots are in parens because certain compilers (Vite?) cannot\r\n * handle seeing that variable in comments.\r\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\r\n */\r\nconst getDefaultsFromEnvVariable = () => {\r\n    if (typeof process === 'undefined' || typeof process.env === 'undefined') {\r\n        return;\r\n    }\r\n    const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\r\n    if (defaultsJsonString) {\r\n        return JSON.parse(defaultsJsonString);\r\n    }\r\n};\r\nconst getDefaultsFromCookie = () => {\r\n    if (typeof document === 'undefined') {\r\n        return;\r\n    }\r\n    let match;\r\n    try {\r\n        match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\r\n    }\r\n    catch (e) {\r\n        // Some environments such as Angular Universal SSR have a\r\n        // `document` object but error on accessing `document.cookie`.\r\n        return;\r\n    }\r\n    const decoded = match && base64Decode(match[1]);\r\n    return decoded && JSON.parse(decoded);\r\n};\r\n/**\r\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\r\n * (1) if such an object exists as a property of `globalThis`\r\n * (2) if such an object was provided on a shell environment variable\r\n * (3) if such an object exists in a cookie\r\n * @public\r\n */\r\nconst getDefaults = () => {\r\n    try {\r\n        return (getDefaultsFromGlobal() ||\r\n            getDefaultsFromEnvVariable() ||\r\n            getDefaultsFromCookie());\r\n    }\r\n    catch (e) {\r\n        /**\r\n         * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\r\n         * to any environment case we have not accounted for. Log to\r\n         * info instead of swallowing so we can find these unknown cases\r\n         * and add paths for them if needed.\r\n         */\r\n        console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\r\n        return;\r\n    }\r\n};\r\n/**\r\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\r\n * @public\r\n */\r\nconst getDefaultAppConfig = () => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.config; };\r\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Deferred {\r\n    constructor() {\r\n        this.reject = () => { };\r\n        this.resolve = () => { };\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promisified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */\r\n    wrapCallback(callback) {\r\n        return (error, value) => {\r\n            if (error) {\r\n                this.reject(error);\r\n            }\r\n            else {\r\n                this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                this.promise.catch(() => { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\n/**\r\n * Detect Browser Environment.\r\n * Note: This will return true for certain test frameworks that are incompletely\r\n * mimicking a browser, and should not lead to assuming all browser APIs are\r\n * available.\r\n */\r\nfunction isBrowser() {\r\n    return typeof window !== 'undefined' || isWebWorker();\r\n}\r\n/**\r\n * Detect Web Worker context.\r\n */\r\nfunction isWebWorker() {\r\n    return (typeof WorkerGlobalScope !== 'undefined' &&\r\n        typeof self !== 'undefined' &&\r\n        self instanceof WorkerGlobalScope);\r\n}\r\n/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */\r\nfunction isIndexedDBAvailable() {\r\n    try {\r\n        return typeof indexedDB === 'object';\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */\r\nfunction validateIndexedDBOpenable() {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            let preExist = true;\r\n            const DB_CHECK_NAME = 'validate-browser-context-for-indexeddb-analytics-module';\r\n            const request = self.indexedDB.open(DB_CHECK_NAME);\r\n            request.onsuccess = () => {\r\n                request.result.close();\r\n                // delete database only when it doesn't pre-exist\r\n                if (!preExist) {\r\n                    self.indexedDB.deleteDatabase(DB_CHECK_NAME);\r\n                }\r\n                resolve(true);\r\n            };\r\n            request.onupgradeneeded = () => {\r\n                preExist = false;\r\n            };\r\n            request.onerror = () => {\r\n                var _a;\r\n                reject(((_a = request.error) === null || _a === void 0 ? void 0 : _a.message) || '');\r\n            };\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Standardized Firebase Error.\r\n *\r\n * Usage:\r\n *\r\n *   // TypeScript string literals for type-safe codes\r\n *   type Err =\r\n *     'unknown' |\r\n *     'object-not-found'\r\n *     ;\r\n *\r\n *   // Closure enum for type-safe error codes\r\n *   // at-enum {string}\r\n *   var Err = {\r\n *     UNKNOWN: 'unknown',\r\n *     OBJECT_NOT_FOUND: 'object-not-found',\r\n *   }\r\n *\r\n *   let errors: Map<Err, string> = {\r\n *     'generic-error': \"Unknown error\",\r\n *     'file-not-found': \"Could not find file: {$file}\",\r\n *   };\r\n *\r\n *   // Type-safe function - must pass a valid error code as param.\r\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\r\n *\r\n *   ...\r\n *   throw error.create(Err.GENERIC);\r\n *   ...\r\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\r\n *   ...\r\n *   // Service: Could not file file: foo.txt (service/file-not-found).\r\n *\r\n *   catch (e) {\r\n *     assert(e.message === \"Could not find file: foo.txt.\");\r\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\r\n *       console.log(\"Could not read file: \" + e['file']);\r\n *     }\r\n *   }\r\n */\r\nconst ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nclass FirebaseError extends Error {\r\n    constructor(\r\n    /** The error code for this error. */\r\n    code, message, \r\n    /** Custom data for this error. */\r\n    customData) {\r\n        super(message);\r\n        this.code = code;\r\n        this.customData = customData;\r\n        /** The custom name for all FirebaseErrors. */\r\n        this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n    }\r\n}\r\nclass ErrorFactory {\r\n    constructor(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    create(code, ...data) {\r\n        const customData = data[0] || {};\r\n        const fullCode = `${this.service}/${code}`;\r\n        const template = this.errors[code];\r\n        const message = template ? replaceTemplate(template, customData) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\r\n        const error = new FirebaseError(fullCode, fullMessage, customData);\r\n        return error;\r\n    }\r\n}\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, (_, key) => {\r\n        const value = data[key];\r\n        return value != null ? String(value) : `<${key}?>`;\r\n    });\r\n}\r\nconst PATTERN = /\\{\\$([^}]+)}/g;\n/**\r\n * Deep equal two objects. Support Arrays and Objects.\r\n */\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    const aKeys = Object.keys(a);\r\n    const bKeys = Object.keys(b);\r\n    for (const k of aKeys) {\r\n        if (!bKeys.includes(k)) {\r\n            return false;\r\n        }\r\n        const aProp = a[k];\r\n        const bProp = b[k];\r\n        if (isObject(aProp) && isObject(bProp)) {\r\n            if (!deepEqual(aProp, bProp)) {\r\n                return false;\r\n            }\r\n        }\r\n        else if (aProp !== bProp) {\r\n            return false;\r\n        }\r\n    }\r\n    for (const k of bKeys) {\r\n        if (!aKeys.includes(k)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isObject(thing) {\r\n    return thing !== null && typeof thing === 'object';\r\n}\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass Component {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    constructor(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* InstantiationMode.LAZY */;\r\n        this.onInstanceCreated = null;\r\n    }\r\n    setInstantiationMode(mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    }\r\n    setMultipleInstances(multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    }\r\n    setServiceProps(props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    }\r\n    setInstanceCreatedCallback(callback) {\r\n        this.onInstanceCreated = callback;\r\n        return this;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_ENTRY_NAME$1 = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nclass Provider {\r\n    constructor(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n        this.instancesOptions = new Map();\r\n        this.onInitCallbacks = new Map();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide multiple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    get(identifier) {\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            const deferred = new Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            if (this.isInitialized(normalizedIdentifier) ||\r\n                this.shouldAutoInitialize()) {\r\n                // initialize the service if it can be auto-initialized\r\n                try {\r\n                    const instance = this.getOrInitializeService({\r\n                        instanceIdentifier: normalizedIdentifier\r\n                    });\r\n                    if (instance) {\r\n                        deferred.resolve(instance);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception during get(), it should not cause\r\n                    // a fatal error. We just return the unresolved promise in this case.\r\n                }\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    }\r\n    getImmediate(options) {\r\n        var _a;\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\r\n        const optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\r\n        if (this.isInitialized(normalizedIdentifier) ||\r\n            this.shouldAutoInitialize()) {\r\n            try {\r\n                return this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n            }\r\n            catch (e) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // In case a component is not initialized and should/cannot be auto-initialized at the moment, return null if the optional flag is set, or throw\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw Error(`Service ${this.name} is not available`);\r\n            }\r\n        }\r\n    }\r\n    getComponent() {\r\n        return this.component;\r\n    }\r\n    setComponent(component) {\r\n        if (component.name !== this.name) {\r\n            throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);\r\n        }\r\n        if (this.component) {\r\n            throw Error(`Component for ${this.name} has already been provided`);\r\n        }\r\n        this.component = component;\r\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\r\n        if (!this.shouldAutoInitialize()) {\r\n            return;\r\n        }\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME$1 });\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        // Create service instances for the pending promises and resolve them\r\n        // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n        // and all promises with resolve with it regardless of the identifier.\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            try {\r\n                // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                const instance = this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n            catch (e) {\r\n                // when the instance factory throws an exception, it should not cause\r\n                // a fatal error. We just leave the promise unresolved.\r\n            }\r\n        }\r\n    }\r\n    clearInstance(identifier = DEFAULT_ENTRY_NAME$1) {\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instancesOptions.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    }\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    async delete() {\r\n        const services = Array.from(this.instances.values());\r\n        await Promise.all([\r\n            ...services\r\n                .filter(service => 'INTERNAL' in service) // legacy services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service.INTERNAL.delete()),\r\n            ...services\r\n                .filter(service => '_delete' in service) // modularized services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service._delete())\r\n        ]);\r\n    }\r\n    isComponentSet() {\r\n        return this.component != null;\r\n    }\r\n    isInitialized(identifier = DEFAULT_ENTRY_NAME$1) {\r\n        return this.instances.has(identifier);\r\n    }\r\n    getOptions(identifier = DEFAULT_ENTRY_NAME$1) {\r\n        return this.instancesOptions.get(identifier) || {};\r\n    }\r\n    initialize(opts = {}) {\r\n        const { options = {} } = opts;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\r\n        if (this.isInitialized(normalizedIdentifier)) {\r\n            throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);\r\n        }\r\n        if (!this.isComponentSet()) {\r\n            throw Error(`Component ${this.name} has not been registered yet`);\r\n        }\r\n        const instance = this.getOrInitializeService({\r\n            instanceIdentifier: normalizedIdentifier,\r\n            options\r\n        });\r\n        // resolve any pending promise waiting for the service instance\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            if (normalizedIdentifier === normalizedDeferredIdentifier) {\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n    /**\r\n     *\r\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n     *\r\n     * @param identifier An optional instance identifier\r\n     * @returns a function to unregister the callback\r\n     */\r\n    onInit(callback, identifier) {\r\n        var _a;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        const existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\r\n        existingCallbacks.add(callback);\r\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\r\n        const existingInstance = this.instances.get(normalizedIdentifier);\r\n        if (existingInstance) {\r\n            callback(existingInstance, normalizedIdentifier);\r\n        }\r\n        return () => {\r\n            existingCallbacks.delete(callback);\r\n        };\r\n    }\r\n    /**\r\n     * Invoke onInit callbacks synchronously\r\n     * @param instance the service instance`\r\n     */\r\n    invokeOnInitCallbacks(instance, identifier) {\r\n        const callbacks = this.onInitCallbacks.get(identifier);\r\n        if (!callbacks) {\r\n            return;\r\n        }\r\n        for (const callback of callbacks) {\r\n            try {\r\n                callback(instance, identifier);\r\n            }\r\n            catch (_a) {\r\n                // ignore errors in the onInit callback\r\n            }\r\n        }\r\n    }\r\n    getOrInitializeService({ instanceIdentifier, options = {} }) {\r\n        let instance = this.instances.get(instanceIdentifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, {\r\n                instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\r\n                options\r\n            });\r\n            this.instances.set(instanceIdentifier, instance);\r\n            this.instancesOptions.set(instanceIdentifier, options);\r\n            /**\r\n             * Invoke onInit listeners.\r\n             * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n             * while onInit listeners are registered by consumers of the provider.\r\n             */\r\n            this.invokeOnInitCallbacks(instance, instanceIdentifier);\r\n            /**\r\n             * Order is important\r\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n             * makes `isInitialized()` return true.\r\n             */\r\n            if (this.component.onInstanceCreated) {\r\n                try {\r\n                    this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\r\n                }\r\n                catch (_a) {\r\n                    // ignore errors in the onInstanceCreatedCallback\r\n                }\r\n            }\r\n        }\r\n        return instance || null;\r\n    }\r\n    normalizeInstanceIdentifier(identifier = DEFAULT_ENTRY_NAME$1) {\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME$1;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    }\r\n    shouldAutoInitialize() {\r\n        return (!!this.component &&\r\n            this.component.instantiationMode !== \"EXPLICIT\" /* InstantiationMode.EXPLICIT */);\r\n    }\r\n}\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME$1 ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* InstantiationMode.EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass ComponentContainer {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    addComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(`Component ${component.name} has already been registered with ${this.name}`);\r\n        }\r\n        provider.setComponent(component);\r\n    }\r\n    addOrOverwriteComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    }\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    getProvider(name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        const provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    }\r\n    getProviders() {\r\n        return Array.from(this.providers.values());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nconst instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nconst levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nconst defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nconst ConsoleMethod = {\r\n    [LogLevel.DEBUG]: 'log',\r\n    [LogLevel.VERBOSE]: 'log',\r\n    [LogLevel.INFO]: 'info',\r\n    [LogLevel.WARN]: 'warn',\r\n    [LogLevel.ERROR]: 'error'\r\n};\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nconst defaultLogHandler = (instance, logType, ...args) => {\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    const now = new Date().toISOString();\r\n    const method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method](`[${now}]  ${instance.name}:`, ...args);\r\n    }\r\n    else {\r\n        throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\r\n    }\r\n};\r\nclass Logger {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    constructor(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    get logLevel() {\r\n        return this._logLevel;\r\n    }\r\n    set logLevel(val) {\r\n        if (!(val in LogLevel)) {\r\n            throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\r\n        }\r\n        this._logLevel = val;\r\n    }\r\n    // Workaround for setter/getter having to be the same type.\r\n    setLogLevel(val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    }\r\n    get logHandler() {\r\n        return this._logHandler;\r\n    }\r\n    set logHandler(val) {\r\n        if (typeof val !== 'function') {\r\n            throw new TypeError('Value assigned to `logHandler` must be a function');\r\n        }\r\n        this._logHandler = val;\r\n    }\r\n    get userLogHandler() {\r\n        return this._userLogHandler;\r\n    }\r\n    set userLogHandler(val) {\r\n        this._userLogHandler = val;\r\n    }\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    debug(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\r\n        this._logHandler(this, LogLevel.DEBUG, ...args);\r\n    }\r\n    log(...args) {\r\n        this._userLogHandler &&\r\n            this._userLogHandler(this, LogLevel.VERBOSE, ...args);\r\n        this._logHandler(this, LogLevel.VERBOSE, ...args);\r\n    }\r\n    info(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\r\n        this._logHandler(this, LogLevel.INFO, ...args);\r\n    }\r\n    warn(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\r\n        this._logHandler(this, LogLevel.WARN, ...args);\r\n    }\r\n    error(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\r\n        this._logHandler(this, LogLevel.ERROR, ...args);\r\n    }\r\n}\r\nfunction setLogLevel$1(level) {\r\n    instances.forEach(inst => {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    for (const instance of instances) {\r\n        let customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = (instance, level, ...args) => {\r\n                const message = args\r\n                    .map(arg => {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(arg => arg)\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message,\r\n                        args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\n\nconst instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PlatformLoggerServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    getPlatformInfoString() {\r\n        const providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(provider => {\r\n            if (isVersionServiceProvider(provider)) {\r\n                const service = provider.getImmediate();\r\n                return `${service.library}/${service.version}`;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(logString => logString)\r\n            .join(' ');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    const component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* ComponentType.VERSION */;\r\n}\n\nconst name$q = \"https://www.gstatic.com/firebasejs/10.14.1/firebase-app.js\";\nconst version$1 = \"0.10.13\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('https://www.gstatic.com/firebasejs/10.14.1/firebase-app.js');\n\nconst name$p = \"@firebase/app-compat\";\n\nconst name$o = \"@firebase/analytics-compat\";\n\nconst name$n = \"@firebase/analytics\";\n\nconst name$m = \"@firebase/app-check-compat\";\n\nconst name$l = \"@firebase/app-check\";\n\nconst name$k = \"@firebase/auth\";\n\nconst name$j = \"@firebase/auth-compat\";\n\nconst name$i = \"@firebase/database\";\n\nconst name$h = \"@firebase/data-connect\";\n\nconst name$g = \"@firebase/database-compat\";\n\nconst name$f = \"@firebase/functions\";\n\nconst name$e = \"@firebase/functions-compat\";\n\nconst name$d = \"@firebase/installations\";\n\nconst name$c = \"@firebase/installations-compat\";\n\nconst name$b = \"@firebase/messaging\";\n\nconst name$a = \"@firebase/messaging-compat\";\n\nconst name$9 = \"@firebase/performance\";\n\nconst name$8 = \"@firebase/performance-compat\";\n\nconst name$7 = \"@firebase/remote-config\";\n\nconst name$6 = \"@firebase/remote-config-compat\";\n\nconst name$5 = \"@firebase/storage\";\n\nconst name$4 = \"@firebase/storage-compat\";\n\nconst name$3 = \"@firebase/firestore\";\n\nconst name$2 = \"@firebase/vertexai-preview\";\n\nconst name$1 = \"@firebase/firestore-compat\";\n\nconst name$r = \"firebase\";\nconst version$2 = \"10.14.1\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nconst PLATFORM_LOG_STRING = {\r\n    [name$q]: 'fire-core',\r\n    [name$p]: 'fire-core-compat',\r\n    [name$n]: 'fire-analytics',\r\n    [name$o]: 'fire-analytics-compat',\r\n    [name$l]: 'fire-app-check',\r\n    [name$m]: 'fire-app-check-compat',\r\n    [name$k]: 'fire-auth',\r\n    [name$j]: 'fire-auth-compat',\r\n    [name$i]: 'fire-rtdb',\r\n    [name$h]: 'fire-data-connect',\r\n    [name$g]: 'fire-rtdb-compat',\r\n    [name$f]: 'fire-fn',\r\n    [name$e]: 'fire-fn-compat',\r\n    [name$d]: 'fire-iid',\r\n    [name$c]: 'fire-iid-compat',\r\n    [name$b]: 'fire-fcm',\r\n    [name$a]: 'fire-fcm-compat',\r\n    [name$9]: 'fire-perf',\r\n    [name$8]: 'fire-perf-compat',\r\n    [name$7]: 'fire-rc',\r\n    [name$6]: 'fire-rc-compat',\r\n    [name$5]: 'fire-gcs',\r\n    [name$4]: 'fire-gcs-compat',\r\n    [name$3]: 'fire-fst',\r\n    [name$1]: 'fire-fst-compat',\r\n    [name$2]: 'fire-vertex',\r\n    'fire-js': 'fire-js',\r\n    [name$r]: 'fire-js-all'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nconst _apps = new Map();\r\n/**\r\n * @internal\r\n */\r\nconst _serverApps = new Map();\r\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst _components = new Map();\r\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\r\nfunction _addComponent(app, component) {\r\n    try {\r\n        app.container.addComponent(component);\r\n    }\r\n    catch (e) {\r\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\r\n    }\r\n}\r\n/**\r\n *\r\n * @internal\r\n */\r\nfunction _addOrOverwriteComponent(app, component) {\r\n    app.container.addOrOverwriteComponent(component);\r\n}\r\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\r\nfunction _registerComponent(component) {\r\n    const componentName = component.name;\r\n    if (_components.has(componentName)) {\r\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\r\n        return false;\r\n    }\r\n    _components.set(componentName, component);\r\n    // add the component to existing app instances\r\n    for (const app of _apps.values()) {\r\n        _addComponent(app, component);\r\n    }\r\n    for (const serverApp of _serverApps.values()) {\r\n        _addComponent(serverApp, component);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\r\nfunction _getProvider(app, name) {\r\n    const heartbeatController = app.container\r\n        .getProvider('heartbeat')\r\n        .getImmediate({ optional: true });\r\n    if (heartbeatController) {\r\n        void heartbeatController.triggerHeartbeat();\r\n    }\r\n    return app.container.getProvider(name);\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\r\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\r\n    _getProvider(app, name).clearInstance(instanceIdentifier);\r\n}\r\n/**\r\n *\r\n * @param obj - an object of type FirebaseApp or FirebaseOptions.\r\n *\r\n * @returns true if the provide object is of type FirebaseApp.\r\n *\r\n * @internal\r\n */\r\nfunction _isFirebaseApp(obj) {\r\n    return obj.options !== undefined;\r\n}\r\n/**\r\n *\r\n * @param obj - an object of type FirebaseApp.\r\n *\r\n * @returns true if the provided object is of type FirebaseServerAppImpl.\r\n *\r\n * @internal\r\n */\r\nfunction _isFirebaseServerApp(obj) {\r\n    return obj.settings !== undefined;\r\n}\r\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\r\nfunction _clearComponents() {\r\n    _components.clear();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call initializeApp() first',\r\n    [\"bad-app-name\" /* AppError.BAD_APP_NAME */]: \"Illegal App name: '{$appName}'\",\r\n    [\"duplicate-app\" /* AppError.DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\r\n    [\"app-deleted\" /* AppError.APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\r\n    [\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */]: 'Firebase Server App has been deleted',\r\n    [\"no-options\" /* AppError.NO_OPTIONS */]: 'Need to provide options, when not being deployed to hosting via source.',\r\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\r\n    [\"idb-open\" /* AppError.IDB_OPEN */]: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-get\" /* AppError.IDB_GET */]: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-set\" /* AppError.IDB_WRITE */]: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-delete\" /* AppError.IDB_DELETE */]: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */]: 'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\r\n    [\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */]: 'FirebaseServerApp is not for use in browser environments.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(options, config, container) {\r\n        this._isDeleted = false;\r\n        this._options = Object.assign({}, options);\r\n        this._config = Object.assign({}, config);\r\n        this._name = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled;\r\n        this._container = container;\r\n        this.container.addComponent(new Component('app', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        this.checkDestroyed();\r\n        return this._automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this.checkDestroyed();\r\n        this._automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        this.checkDestroyed();\r\n        return this._name;\r\n    }\r\n    get options() {\r\n        this.checkDestroyed();\r\n        return this._options;\r\n    }\r\n    get config() {\r\n        this.checkDestroyed();\r\n        return this._config;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    get isDeleted() {\r\n        return this._isDeleted;\r\n    }\r\n    set isDeleted(val) {\r\n        this._isDeleted = val;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, { appName: this._name });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseServerAppImpl extends FirebaseAppImpl {\r\n    constructor(options, serverConfig, name, container) {\r\n        // Build configuration parameters for the FirebaseAppImpl base class.\r\n        const automaticDataCollectionEnabled = serverConfig.automaticDataCollectionEnabled !== undefined\r\n            ? serverConfig.automaticDataCollectionEnabled\r\n            : false;\r\n        // Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\r\n        const config = {\r\n            name,\r\n            automaticDataCollectionEnabled\r\n        };\r\n        if (options.apiKey !== undefined) {\r\n            // Construct the parent FirebaseAppImp object.\r\n            super(options, config, container);\r\n        }\r\n        else {\r\n            const appImpl = options;\r\n            super(appImpl.options, config, container);\r\n        }\r\n        // Now construct the data for the FirebaseServerAppImpl.\r\n        this._serverConfig = Object.assign({ automaticDataCollectionEnabled }, serverConfig);\r\n        this._finalizationRegistry = null;\r\n        if (typeof FinalizationRegistry !== 'undefined') {\r\n            this._finalizationRegistry = new FinalizationRegistry(() => {\r\n                this.automaticCleanup();\r\n            });\r\n        }\r\n        this._refCount = 0;\r\n        this.incRefCount(this._serverConfig.releaseOnDeref);\r\n        // Do not retain a hard reference to the dref object, otherwise the FinalizationRegistry\r\n        // will never trigger.\r\n        this._serverConfig.releaseOnDeref = undefined;\r\n        serverConfig.releaseOnDeref = undefined;\r\n        registerVersion(name$q, version$1, 'serverapp');\r\n    }\r\n    toJSON() {\r\n        return undefined;\r\n    }\r\n    get refCount() {\r\n        return this._refCount;\r\n    }\r\n    // Increment the reference count of this server app. If an object is provided, register it\r\n    // with the finalization registry.\r\n    incRefCount(obj) {\r\n        if (this.isDeleted) {\r\n            return;\r\n        }\r\n        this._refCount++;\r\n        if (obj !== undefined && this._finalizationRegistry !== null) {\r\n            this._finalizationRegistry.register(obj, this);\r\n        }\r\n    }\r\n    // Decrement the reference count.\r\n    decRefCount() {\r\n        if (this.isDeleted) {\r\n            return 0;\r\n        }\r\n        return --this._refCount;\r\n    }\r\n    // Invoked by the FinalizationRegistry callback to note that this app should go through its\r\n    // reference counts and delete itself if no reference count remain. The coordinating logic that\r\n    // handles this is in deleteApp(...).\r\n    automaticCleanup() {\r\n        void deleteApp(this);\r\n    }\r\n    get settings() {\r\n        this.checkDestroyed();\r\n        return this._serverConfig;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\r\nconst SDK_VERSION = version$2;\r\nfunction initializeApp(_options, rawConfig = {}) {\r\n    let options = _options;\r\n    if (typeof rawConfig !== 'object') {\r\n        const name = rawConfig;\r\n        rawConfig = { name };\r\n    }\r\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME, automaticDataCollectionEnabled: false }, rawConfig);\r\n    const name = config.name;\r\n    if (typeof name !== 'string' || !name) {\r\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\r\n            appName: String(name)\r\n        });\r\n    }\r\n    options || (options = getDefaultAppConfig());\r\n    if (!options) {\r\n        throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\r\n    }\r\n    const existingApp = _apps.get(name);\r\n    if (existingApp) {\r\n        // return the existing app if options and config deep equal the ones in the existing app.\r\n        if (deepEqual(options, existingApp.options) &&\r\n            deepEqual(config, existingApp.config)) {\r\n            return existingApp;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, { appName: name });\r\n        }\r\n    }\r\n    const container = new ComponentContainer(name);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseAppImpl(options, config, container);\r\n    _apps.set(name, newApp);\r\n    return newApp;\r\n}\r\nfunction initializeServerApp(_options, _serverAppConfig) {\r\n    if (isBrowser() && !isWebWorker()) {\r\n        // FirebaseServerApp isn't designed to be run in browsers.\r\n        throw ERROR_FACTORY.create(\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */);\r\n    }\r\n    if (_serverAppConfig.automaticDataCollectionEnabled === undefined) {\r\n        _serverAppConfig.automaticDataCollectionEnabled = false;\r\n    }\r\n    let appOptions;\r\n    if (_isFirebaseApp(_options)) {\r\n        appOptions = _options.options;\r\n    }\r\n    else {\r\n        appOptions = _options;\r\n    }\r\n    // Build an app name based on a hash of the configuration options.\r\n    const nameObj = Object.assign(Object.assign({}, _serverAppConfig), appOptions);\r\n    // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\r\n    // construction of FirebaseServerApp instances. For example, if the object is the request headers.\r\n    if (nameObj.releaseOnDeref !== undefined) {\r\n        delete nameObj.releaseOnDeref;\r\n    }\r\n    const hashCode = (s) => {\r\n        return [...s].reduce((hash, c) => (Math.imul(31, hash) + c.charCodeAt(0)) | 0, 0);\r\n    };\r\n    if (_serverAppConfig.releaseOnDeref !== undefined) {\r\n        if (typeof FinalizationRegistry === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */, {});\r\n        }\r\n    }\r\n    const nameString = '' + hashCode(JSON.stringify(nameObj));\r\n    const existingApp = _serverApps.get(nameString);\r\n    if (existingApp) {\r\n        existingApp.incRefCount(_serverAppConfig.releaseOnDeref);\r\n        return existingApp;\r\n    }\r\n    const container = new ComponentContainer(nameString);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseServerAppImpl(appOptions, _serverAppConfig, nameString, container);\r\n    _serverApps.set(nameString, newApp);\r\n    return newApp;\r\n}\r\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\r\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\r\n    const app = _apps.get(name);\r\n    if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\r\n        return initializeApp();\r\n    }\r\n    if (!app) {\r\n        throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, { appName: name });\r\n    }\r\n    return app;\r\n}\r\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\r\nfunction getApps() {\r\n    return Array.from(_apps.values());\r\n}\r\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\r\nasync function deleteApp(app) {\r\n    let cleanupProviders = false;\r\n    const name = app.name;\r\n    if (_apps.has(name)) {\r\n        cleanupProviders = true;\r\n        _apps.delete(name);\r\n    }\r\n    else if (_serverApps.has(name)) {\r\n        const firebaseServerApp = app;\r\n        if (firebaseServerApp.decRefCount() <= 0) {\r\n            _serverApps.delete(name);\r\n            cleanupProviders = true;\r\n        }\r\n    }\r\n    if (cleanupProviders) {\r\n        await Promise.all(app.container\r\n            .getProviders()\r\n            .map(provider => provider.delete()));\r\n        app.isDeleted = true;\r\n    }\r\n}\r\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\r\nfunction registerVersion(libraryKeyOrName, version, variant) {\r\n    var _a;\r\n    // TODO: We can use this check to whitelist strings when/if we set up\r\n    // a good whitelist system.\r\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n    if (variant) {\r\n        library += `-${variant}`;\r\n    }\r\n    const libraryMismatch = library.match(/\\s|\\//);\r\n    const versionMismatch = version.match(/\\s|\\//);\r\n    if (libraryMismatch || versionMismatch) {\r\n        const warning = [\r\n            `Unable to register library \"${library}\" with version \"${version}\":`\r\n        ];\r\n        if (libraryMismatch) {\r\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        if (libraryMismatch && versionMismatch) {\r\n            warning.push('and');\r\n        }\r\n        if (versionMismatch) {\r\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        logger.warn(warning.join(' '));\r\n        return;\r\n    }\r\n    _registerComponent(new Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* ComponentType.VERSION */));\r\n}\r\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\r\nfunction onLog(logCallback, options) {\r\n    if (logCallback !== null && typeof logCallback !== 'function') {\r\n        throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\r\n    }\r\n    setUserLogHandler(logCallback, options);\r\n}\r\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\r\nfunction setLogLevel(logLevel) {\r\n    setLogLevel$1(logLevel);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DB_NAME = 'firebase-heartbeat-database';\r\nconst DB_VERSION = 1;\r\nconst STORE_NAME = 'firebase-heartbeat-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDB(DB_NAME, DB_VERSION, {\r\n            upgrade: (db, oldVersion) => {\r\n                // We don't use 'break' in this switch statement, the fall-through\r\n                // behavior is what we want, because if there are multiple versions between\r\n                // the old version and the current version, we want ALL the migrations\r\n                // that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (oldVersion) {\r\n                    case 0:\r\n                        try {\r\n                            db.createObjectStore(STORE_NAME);\r\n                        }\r\n                        catch (e) {\r\n                            // Safari/iOS browsers throw occasional exceptions on\r\n                            // db.createObjectStore() that may be a bug. Avoid blocking\r\n                            // the rest of the app functionality.\r\n                            console.warn(e);\r\n                        }\r\n                }\r\n            }\r\n        }).catch(e => {\r\n            throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\r\n                originalErrorMessage: e.message\r\n            });\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\nasync function readHeartbeatsFromIndexedDB(app) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const tx = db.transaction(STORE_NAME);\r\n        const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\r\n        // We already have the value but tx.done can throw,\r\n        // so we need to await it here to catch errors\r\n        await tx.done;\r\n        return result;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nasync function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const tx = db.transaction(STORE_NAME, 'readwrite');\r\n        const objectStore = tx.objectStore(STORE_NAME);\r\n        await objectStore.put(heartbeatObject, computeKey(app));\r\n        await tx.done;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nfunction computeKey(app) {\r\n    return `${app.name}!${app.options.appId}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst MAX_HEADER_BYTES = 1024;\r\n// 30 days\r\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\r\nclass HeartbeatServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n        /**\r\n         * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n         * the header string.\r\n         * Stores one record per date. This will be consolidated into the standard\r\n         * format of one record per user agent string before being sent as a header.\r\n         * Populated from indexedDB when the controller is instantiated and should\r\n         * be kept in sync with indexedDB.\r\n         * Leave public for easier testing.\r\n         */\r\n        this._heartbeatsCache = null;\r\n        const app = this.container.getProvider('app').getImmediate();\r\n        this._storage = new HeartbeatStorageImpl(app);\r\n        this._heartbeatsCachePromise = this._storage.read().then(result => {\r\n            this._heartbeatsCache = result;\r\n            return result;\r\n        });\r\n    }\r\n    /**\r\n     * Called to report a heartbeat. The function will generate\r\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n     * to IndexedDB.\r\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n     * already logged, subsequent calls to this function in the same day will be ignored.\r\n     */\r\n    async triggerHeartbeat() {\r\n        var _a, _b;\r\n        try {\r\n            const platformLogger = this.container\r\n                .getProvider('platform-logger')\r\n                .getImmediate();\r\n            // This is the \"Firebase user agent\" string from the platform logger\r\n            // service, not the browser user agent.\r\n            const agent = platformLogger.getPlatformInfoString();\r\n            const date = getUTCDateString();\r\n            if (((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null) {\r\n                this._heartbeatsCache = await this._heartbeatsCachePromise;\r\n                // If we failed to construct a heartbeats cache, then return immediately.\r\n                if (((_b = this._heartbeatsCache) === null || _b === void 0 ? void 0 : _b.heartbeats) == null) {\r\n                    return;\r\n                }\r\n            }\r\n            // Do not store a heartbeat if one is already stored for this day\r\n            // or if a header has already been sent today.\r\n            if (this._heartbeatsCache.lastSentHeartbeatDate === date ||\r\n                this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\r\n                return;\r\n            }\r\n            else {\r\n                // There is no entry for this date. Create one.\r\n                this._heartbeatsCache.heartbeats.push({ date, agent });\r\n            }\r\n            // Remove entries older than 30 days.\r\n            this._heartbeatsCache.heartbeats =\r\n                this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\r\n                    const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\r\n                    const now = Date.now();\r\n                    return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\r\n                });\r\n            return this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        catch (e) {\r\n            logger.warn(e);\r\n        }\r\n    }\r\n    /**\r\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n     * It also clears all heartbeats from memory as well as in IndexedDB.\r\n     *\r\n     * NOTE: Consuming product SDKs should not send the header if this method\r\n     * returns an empty string.\r\n     */\r\n    async getHeartbeatsHeader() {\r\n        var _a;\r\n        try {\r\n            if (this._heartbeatsCache === null) {\r\n                await this._heartbeatsCachePromise;\r\n            }\r\n            // If it's still null or the array is empty, there is no data to send.\r\n            if (((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null ||\r\n                this._heartbeatsCache.heartbeats.length === 0) {\r\n                return '';\r\n            }\r\n            const date = getUTCDateString();\r\n            // Extract as many heartbeats from the cache as will fit under the size limit.\r\n            const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\r\n            const headerString = base64urlEncodeWithoutPadding(JSON.stringify({ version: 2, heartbeats: heartbeatsToSend }));\r\n            // Store last sent date to prevent another being logged/sent for the same day.\r\n            this._heartbeatsCache.lastSentHeartbeatDate = date;\r\n            if (unsentEntries.length > 0) {\r\n                // Store any unsent entries if they exist.\r\n                this._heartbeatsCache.heartbeats = unsentEntries;\r\n                // This seems more likely than emptying the array (below) to lead to some odd state\r\n                // since the cache isn't empty and this will be called again on the next request,\r\n                // and is probably safest if we await it.\r\n                await this._storage.overwrite(this._heartbeatsCache);\r\n            }\r\n            else {\r\n                this._heartbeatsCache.heartbeats = [];\r\n                // Do not wait for this, to reduce latency.\r\n                void this._storage.overwrite(this._heartbeatsCache);\r\n            }\r\n            return headerString;\r\n        }\r\n        catch (e) {\r\n            logger.warn(e);\r\n            return '';\r\n        }\r\n    }\r\n}\r\nfunction getUTCDateString() {\r\n    const today = new Date();\r\n    // Returns date format 'YYYY-MM-DD'\r\n    return today.toISOString().substring(0, 10);\r\n}\r\nfunction extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\r\n    // Heartbeats grouped by user agent in the standard format to be sent in\r\n    // the header.\r\n    const heartbeatsToSend = [];\r\n    // Single date format heartbeats that are not sent.\r\n    let unsentEntries = heartbeatsCache.slice();\r\n    for (const singleDateHeartbeat of heartbeatsCache) {\r\n        // Look for an existing entry with the same user agent.\r\n        const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\r\n        if (!heartbeatEntry) {\r\n            // If no entry for this user agent exists, create one.\r\n            heartbeatsToSend.push({\r\n                agent: singleDateHeartbeat.agent,\r\n                dates: [singleDateHeartbeat.date]\r\n            });\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                // If the header would exceed max size, remove the added heartbeat\r\n                // entry and stop adding to the header.\r\n                heartbeatsToSend.pop();\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            heartbeatEntry.dates.push(singleDateHeartbeat.date);\r\n            // If the header would exceed max size, remove the added date\r\n            // and stop adding to the header.\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                heartbeatEntry.dates.pop();\r\n                break;\r\n            }\r\n        }\r\n        // Pop unsent entry from queue. (Skipped if adding the entry exceeded\r\n        // quota and the loop breaks early.)\r\n        unsentEntries = unsentEntries.slice(1);\r\n    }\r\n    return {\r\n        heartbeatsToSend,\r\n        unsentEntries\r\n    };\r\n}\r\nclass HeartbeatStorageImpl {\r\n    constructor(app) {\r\n        this.app = app;\r\n        this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\r\n    }\r\n    async runIndexedDBEnvironmentCheck() {\r\n        if (!isIndexedDBAvailable()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return validateIndexedDBOpenable()\r\n                .then(() => true)\r\n                .catch(() => false);\r\n        }\r\n    }\r\n    /**\r\n     * Read all heartbeats.\r\n     */\r\n    async read() {\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return { heartbeats: [] };\r\n        }\r\n        else {\r\n            const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\r\n            if (idbHeartbeatObject === null || idbHeartbeatObject === void 0 ? void 0 : idbHeartbeatObject.heartbeats) {\r\n                return idbHeartbeatObject;\r\n            }\r\n            else {\r\n                return { heartbeats: [] };\r\n            }\r\n        }\r\n    }\r\n    // overwrite the storage with the provided heartbeats\r\n    async overwrite(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: heartbeatsObject.heartbeats\r\n            });\r\n        }\r\n    }\r\n    // add heartbeats\r\n    async add(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: [\r\n                    ...existingHeartbeatsObject.heartbeats,\r\n                    ...heartbeatsObject.heartbeats\r\n                ]\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */\r\nfunction countBytes(heartbeatsCache) {\r\n    // base64 has a restricted set of characters, all of which should be 1 byte.\r\n    return base64urlEncodeWithoutPadding(\r\n    // heartbeatsCache wrapper properties\r\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })).length;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    _registerComponent(new Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    // Register `app` package.\r\n    registerVersion(name$q, version$1, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name$q, version$1, 'esm2017');\r\n    // Register platform SDK identifier (no version).\r\n    registerVersion('fire-js', '');\r\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\r\nregisterCoreComponents('');\n\nvar name = \"firebase\";\nvar version = \"10.14.1\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterVersion(name, version, 'cdn');\n\nexport { FirebaseError, SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _isFirebaseApp, _isFirebaseServerApp, _registerComponent, _removeServiceInstance, _serverApps, deleteApp, getApp, getApps, initializeApp, initializeServerApp, onLog, registerVersion, setLogLevel };\n\n//# sourceMappingURL=firebase-app.js.map\r\n"],"names":["stringToByteArray$1","str","out","let","p","i","length","c","charCodeAt","byteArrayToString","bytes","pos","u","c2","c3","c1","String","fromCharCode","join","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","this","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte3","outByte4","push","encodeString","btoa","decodeString","decodeStringToByteArray","charToByteMap","charAt","byte4","DecodeBase64StringError","constructor","super","arguments","name","base64Encode","utf8Bytes","base64urlEncodeWithoutPadding","replace","base64Decode","e","console","error","getGlobal","self","window","global","getDefaultsFromGlobal","__FIREBASE_DEFAULTS__","getDefaultsFromEnvVariable","defaultsJsonString","process","env","JSON","parse","getDefaultsFromCookie","document","match","cookie","decoded","getDefaults","info","getDefaultAppConfig","_a","config","Deferred","reject","resolve","promise","Promise","wrapCallback","callback","value","catch","isBrowser","isWebWorker","WorkerGlobalScope","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","preExist","DB_CHECK_NAME","request","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","message","ERROR_NAME","FirebaseError","code","customData","Object","setPrototypeOf","prototype","captureStackTrace","ErrorFactory","create","service","serviceName","errors","data","fullCode","template","replaceTemplate","fullMessage","PATTERN","_","key","deepEqual","a","b","k","aKeys","keys","bKeys","includes","aProp","bProp","isObject","thing","Component","instanceFactory","type","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","mode","setMultipleInstances","setServiceProps","props","setInstanceCreatedCallback","DEFAULT_ENTRY_NAME$1","Provider","container","component","instances","Map","instancesDeferred","instancesOptions","onInitCallbacks","get","identifier","normalizedIdentifier","normalizeInstanceIdentifier","has","deferred","set","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","instanceIdentifier","getImmediate","options","optional","getComponent","setComponent","isComponentEager","instanceDeferred","entries","clearInstance","delete","services","from","values","await","all","filter","map","INTERNAL","_delete","isComponentSet","getOptions","initialize","opts","onInit","existingCallbacks","Set","add","existingInstance","invokeOnInitCallbacks","callbacks","normalizeIdentifierForFactory","undefined","ComponentContainer","providers","addComponent","provider","getProvider","addOrOverwriteComponent","getProviders","LogLevel","levelStringToEnum","debug","DEBUG","verbose","VERBOSE","INFO","warn","WARN","ERROR","silent","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","args","logLevel","now","Date","toISOString","method","Logger","_logLevel","_logHandler","_userLogHandler","val","TypeError","setLogLevel","logHandler","userLogHandler","log","setLogLevel$1","level","forEach","inst","setUserLogHandler","logCallback","customLogLevel","arg","toString","stringify","ignored","toLowerCase","instanceOfAny","object","constructors","some","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","IDBDatabase","IDBObjectStore","IDBIndex","IDBCursor","IDBTransaction","getCursorAdvanceMethods","advance","continue","continuePrimaryKey","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","promisifyRequest","unlisten","removeEventListener","success","wrap","addEventListener","then","cacheDonePromiseForTransaction","tx","done","complete","DOMException","idbProxyTraps","target","prop","receiver","objectStoreNames","objectStore","replaceTraps","wrapFunction","func","transaction","apply","unwrap","storeNames","call","sort","transformCachableValue","Proxy","newValue","IDBRequest","openDB","version","blocked","upgrade","blocking","terminated","openPromise","event","oldVersion","newVersion","db","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","async","storeName","store","index","shift","oldTraps","PlatformLoggerServiceImpl","getPlatformInfoString","isVersionServiceProvider","library","logString","name$q","version$1","logger","name$p","name$o","name$n","name$m","name$l","name$k","name$j","name$i","name$h","name$g","name$f","name$e","name$d","name$c","name$b","name$a","name$9","name$8","name$7","name$6","name$5","name$4","name$3","name$2","name$1","name$r","version$2","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","fire-js","_apps","_serverApps","_components","_addComponent","app","_addOrOverwriteComponent","_registerComponent","serverApp","componentName","_getProvider","heartbeatController","triggerHeartbeat","_removeServiceInstance","_isFirebaseApp","obj","_isFirebaseServerApp","settings","_clearComponents","clear","ERRORS","no-app","bad-app-name","duplicate-app","app-deleted","server-app-deleted","no-options","invalid-app-argument","invalid-log-argument","idb-open","idb-get","idb-set","idb-delete","finalization-registry-not-supported","invalid-server-app-environment","ERROR_FACTORY","FirebaseAppImpl","_isDeleted","_options","assign","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","appName","FirebaseServerAppImpl","serverConfig","apiKey","_serverConfig","_finalizationRegistry","FinalizationRegistry","automaticCleanup","_refCount","incRefCount","releaseOnDeref","registerVersion","toJSON","refCount","register","decRefCount","deleteApp","SDK_VERSION","initializeApp","rawConfig","existingApp","newApp","initializeServerApp","_serverAppConfig","appOptions","nameObj","nameString","reduce","hash","Math","imul","getApp","getApps","cleanupProviders","libraryKeyOrName","variant","warning","libraryMismatch","versionMismatch","onLog","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","createObjectStore","originalErrorMessage","readHeartbeatsFromIndexedDB","computeKey","idbGetError","writeHeartbeatsToIndexedDB","heartbeatObject","put","appId","MAX_HEADER_BYTES","STORED_HEARTBEAT_RETENTION_MAX_MILLIS","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","_b","agent","date","getUTCDateString","heartbeats","lastSentHeartbeatDate","singleDateHeartbeat","hbTimestamp","valueOf","overwrite","getHeartbeatsHeader","heartbeatsToSend","unsentEntries","headerString","extractHeartbeatsForHeader","substring","heartbeatsCache","maxSize","slice","heartbeatEntry","find","hb","dates","countBytes","pop","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","registerCoreComponents"],"mappings":"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"}